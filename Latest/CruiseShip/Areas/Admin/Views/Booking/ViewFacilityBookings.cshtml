@model IEnumerable<CruiseShip.Models.Booking>

@{
    ViewData["Title"] = "ViewFacilityBooking";
}

<h1 class="mb-4 text-center text-primary">Facility Bookings</h1>
<partial name="_Notification" />
<div class="table-responsive">
    <table class="table table-hover table-bordered align-middle">
        <thead class="table-dark">
            <tr>
                <th>Voyager Name</th>
                <th>Booking Date</th>
                <th>Start Time</th>
                <th>End Time</th>
                <th>Duration</th>
                <th>Status</th>
                <th>Facility</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                var duration = item.EndTime.Subtract(item.StartTime);
                string formattedDuration = duration.TotalMinutes < 60
                ? $"{duration.TotalMinutes:F0} mins"
                : duration.TotalHours < 24
                ? $"{duration.TotalHours:F1} hrs"
                : $"{duration.TotalDays:F1} days";
                <tr>
                    <td>@Html.DisplayFor(modelItem => item.Voyager.Name)</td>
                    <td>@item.BookingDate.ToString("dd-MM-yyyy HH:mm")</td>
                    <td>@item.StartTime.ToString("dd-MM-yyyy HH:mm")</td>
                    <td>@item.EndTime.ToString("dd-MM-yyyy HH:mm")</td>
                    <td>@formattedDuration</td>
                    <td>
                        @switch (item.Status)
                        {
                            case "Approved":
                                <span class="badge bg-success">Approved</span>
                                break;
                            case "Rejected":
                                <span class="badge bg-danger">Rejected</span>
                                break;
                            default:
                                <span class="badge bg-warning">Pending</span>
                                break;
                        }
                    </td>
                    <td>@Html.DisplayFor(modelItem => item.Facility.Name)</td>
                    <td>
                        @if (item.Status?.ToLower() == "pending")
                        {
                            <button class="btn btn-success btn-sm" onclick="approveRequest('@Url.Action("ApproveRequest", "Booking", new { id = item.Id })')">Approve</button>
                            <button class="btn btn-danger btn-sm" onclick="rejectRequest('@Url.Action("RejectRequest", "Booking", new { id = item.Id })')">Reject</button>
                        }
                        else
                        {
                            <span class="text-muted">No Actions Available</span>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>
<script>
    function approveRequest(url) {
        Swal.fire({
            title: "Approve Request",
            icon: "info",
            showCancelButton: true,
            confirmButtonColor: "#3085d6",
            cancelButtonColor: "#d33",
            confirmButtonText: "Yes, approve it!"
        }).then((result) => {
            if (result.isConfirmed) {
                console.log(url);
                $.ajax({
                    url: url,
                    type: 'GET',
                    success: function (data) {
                        Swal.fire({
                            title: "Approved!",
                            text: "Request has been approved!",
                            icon: "success"
                        }).then((result) => {
                            if (result.isConfirmed) {
                                window.location.reload();
                            }
                        });
                    }
                });
            }
        });
    }

    function rejectRequest(url) {
        Swal.fire({
            title: "Reject Request",
            icon: "warning",
            showCancelButton: true,
            confirmButtonColor: "#3085d6",
            cancelButtonColor: "#d33",
            confirmButtonText: "Yes, reject it!"
        }).then((result) => {
            if (result.isConfirmed) {
                console.log(url);
                $.ajax({
                    url: url,
                    type: 'GET',
                    success: function (data) {
                        Swal.fire({
                            title: "Rejected!",
                            text: "Request has been Rejected!",
                            icon: "success"
                        }).then((result) => {
                            if (result.isConfirmed) {
                                window.location.reload();
                            }
                        });
                    }
                });
            }
        });
    }
</script>
