@model IEnumerable<CruiseShip.Models.Booking>

@{
    ViewData["Title"] = "ViewFacilityBooking";
}

<h1>Facility Bookings </h1>
<partial name="_Notification" />
<table class="table table-bordered ">
    <thead>
        <tr>
            <th>
                Voyager Name
            </th>
            <th>
                @Html.DisplayNameFor(model => model.BookingDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.StartTime)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.EndTime)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Status)
            </th>
            
            <th>
                @Html.DisplayNameFor(model => model.Facility)
            </th>
           
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Voyager.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.BookingDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.StartTime)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EndTime)
            </td>
            <td>
                    @switch (item.Status)
                    {
                        case "Approved":
                            <span class="badge bg-success">Approved</span>
                            break;
                        case "Rejected":
                            <span class="badge bg-danger">Rejected</span>
                            break;
                        default:
                            <span class="badge bg-warning">Pending</span>
                            break;
                    }
            </td>
            
            <td>
                @Html.DisplayFor(modelItem => item.Facility.Name)
            </td>
            
            <td>
                    @if (item.Status?.ToLower() == "pending")
                    {
                        <button class="btn btn-success btn-sm" onclick="approveRequest('@Url.Action("ApproveRequest", "Booking", new { id = item.Id })')">Approve</button>
                        <button class="btn btn-danger btn-sm" onclick="rejectRequest('@Url.Action("RejectRequest", "Booking", new { id = item.Id })')">Reject</button>
                    }
                    else
                    {
                        <span class="text-muted"> No Actions Available</span>
                    }
            </td>
        </tr>
}
    </tbody>
</table>
<script>
    
    function approveRequest(url) {
        Swal.fire({
            title: "Approve Request",
            icon: "info",
            showCancelButton: true,
            confirmButtonColor: "#3085d6",
            cancelButtonColor: "#d33",
            confirmButtonText: "Yes, approve it!"
        }).then((result) => 
        {
            if (result.isConfirmed) 
            {
                console.log(url);
                $.ajax
                ({
                    url: url,
                    type: 'GET',
                    success: function (data) 
                    {
                           Swal.fire({
                                title: "Approved!",
                                text: "Request has been approved!",
                                icon: "success"
                           }).then((result) => {
                                if (result.isConfirmed) {
                                    // Reload the whole page
                                    window.location.reload();
                                }
                           });
                       
                    }
                })
            }
        });
    }
    function rejectRequest(url) {
        Swal.fire({
            title: "Reject Request",
            icon: "warning",
            showCancelButton: true,
            confirmButtonColor: "#3085d6",
            cancelButtonColor: "#d33",
            confirmButtonText: "Yes, reject it!"
        }).then((result) =>
        {
            if (result.isConfirmed)
            {
                console.log(url);
                $.ajax
                ({
                    url: url,
                    type: 'GET',
                    success: function (data)
                    {
                           Swal.fire({
                                title: "Rejected!",
                                text: "Request has been Rejected!",
                                icon: "success"
                           }).then((result) => {
                                if (result.isConfirmed) {
                                    // Reload the whole page
                                    window.location.reload();
                                }
                           });

                    }
                })
            }
        });
    }

</script>